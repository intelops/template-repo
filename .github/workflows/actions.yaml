name: Docker CI

on:
  pull_request:
    types:
      - opened
      - synchronize
  push:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: alpine
  IMAGE_TAGS: ${{ github.sha }}
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  REGISTRY_USER: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ github.token }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: set up podman
        run : |
          sudo apt update
          sudo apt-get -y install podman
          systemctl --user enable --now podman.socket

      - name: Docker Lint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

      - name: Docker Build using Buildah
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAGS }} ${{ env.IMAGE_REGISTRY}}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAGS }}
          containerfiles: |
            ./Dockerfile

      - name: Push To Github
        uses: ./
        id: push
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          extra-args: |
            --disable-content-trust

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAGS }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.1
      - name: Sign image with a key
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
        run: |
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${{ env.IMAGE_REGISTRY}}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAGS }}
